{
  "index.js": {
    "id": "index.js",
    "type": "js",
    "mtime": 1430040257000,
    "src": "/*!\n * Module dependencies.\n */\n\nvar Reepay = require('./lib/reepay');\n/**\n * Export a single instance.\n */\n\nmodule.exports = exports = new Reepay();",
    "deps": {
      "./lib/reepay": "lib/reepay.js"
    },
    "entry": true,
    "global": "reepay"
  },
  "lib/reepay.js": {
    "id": "lib/reepay.js",
    "type": "js",
    "mtime": 1430476135000,
    "src": "var merge = require('yields/merge');\nvar type = require('component/type');\nvar qs = require('visionmedia/node-querystring');\nvar jsonp = require('webmodules/jsonp');\nvar version = require('./version');\nvar errors = require('./errors');\n\n\n\n\n/**\n * Default configuration values.\n *\n * currency: ISO 4217\n * timeout: API request timeout in ms\n * publicKey: Reepay site public key\n * cors: Whether to use XHR2/XDR+CORS over jsonp for API requests\n * api: URL of API\n *\n * @private\n * @type {Object}\n */\n\nvar defaults = {\n    currency: 'EUR',\n    timeout: 60000,\n    publicKey: '',\n    cors: false,\n    api: 'https://api.reepay.com/js/v1'\n};\n\nmodule.exports = Reepay;\n\n\nfunction Reepay(options) {\n    this.id = 0;\n    this.version = version;\n    this.configured = false;\n    this.config = merge({}, defaults);\n    if (options) this.configure(options);\n}\n\n\n/**\n * Configure settings.\n *\n * @param {String|Object} options Either publicKey or object containing\n *                                publicKey and other optional members\n * @param {String} options.publicKey\n * @param {String} [options.currency]\n * @param {String} [options.api]\n * @public\n */\n\nReepay.prototype.configure = function (options) {\n    if (this.configured) throw errors('already-configured');\n\n    if (type(options) === 'string') options = {\n        publicKey: options\n    };\n\n    if (options.publicKey) {\n        this.config.publicKey = options.publicKey;\n    } else {\n        throw errors('missing-public-key');\n    }\n\n    if (options.api) {\n        this.config.api = options.api;\n    }\n\n    if (options.cors) {\n        this.config.cors = options.cors;\n    }\n\n    if (options.currency) {\n        this.config.currency = options.currency;\n    }\n\n    this.config.required = options.required || [];\n\n    this.configured = true;\n};\n\n/**\n * Assembles the API endpoint.\n *\n * @return {String} route\n * @private\n */\n\nReepay.prototype.url = function (route) {\n    return this.config.api + route;\n};\n\n/**\n * Issues an API request.\n *\n * @param {String} method\n * @param {String} route\n * @param {Object} [data]\n * @param {Function} done\n * @throws {Error} If `configure` has not been called.\n * @private\n */\n\nReepay.prototype.request = function (method, route, data, done) {\n\n\n    if (false === this.configured) {\n        throw errors('not-configured');\n    }\n\n    if ('function' == type(data)) {\n        done = data;\n        data = {};\n    }\n\n    data.version = this.version;\n    data.key = this.config.publicKey;\n\n    if (this.config.cors) {\n        return this.xhr(method, route, data, done);\n    } else {\n        return this.jsonp(route, data, done);\n    }\n};\n\n/**\n * Issues an API request over xhr.\n *\n * @param {String} method\n * @param {String} route\n * @param {Object} [data]\n * @param {Function} done\n * @private\n */\n\nReepay.prototype.xhr = function (method, route, data, done) {\n\n    var req = new XHR;\n    var url = this.url(route);\n    var payload = qs.stringify(data);\n\n    if (method === 'get') {\n        url += '?' + payload;\n    }\n\n    req.open(method, url);\n    req.timeout = this.config.timeout;\n    req.ontimeout = function () {\n        done(errors('api-timeout'));\n    };\n    req.onerror = function () {\n        done(errors('api-error'));\n    };\n    req.onprogress = function () {};\n    req.onload = function () {\n        try {\n            var res = json.parse(this.responseText);\n        } catch (e) {\n            return done(errors('api-error', {\n                message: 'There was a problem parsing the API response.'\n            }));\n        }\n\n        if (res && res.error) {\n            done(errors('api-error', res.error));\n        } else {\n            done(null, res);\n        }\n    };\n\n    if (method === 'post') {\n        // only available in XHR2 -- otherwise we are using XDR and cannot set Content-type\n        if (req.setRequestHeader) {\n            req.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        }\n        req.send(payload);\n    } else {\n        req.send();\n    }\n};\n\n/**\n * Issues an API request over jsonp.\n *\n * @param {String} route\n * @param {Object} [data]\n * @param {Function} done\n * @private\n */\n\nReepay.prototype.jsonp = function (route, data, done) {\n\n    var url = this.url(route) + '?' + qs.stringify(data);\n\n    jsonp(url, {\n        timeout: this.config.timeout\n    }, function (err, res) {\n        if (err) return done(err);\n        if (res.error) {\n            done(errors('api-error', res.error));\n        } else {\n            done(null, res);\n        }\n    });\n};\n\n\nReepay.prototype.open = require('./reepay/open');\nReepay.prototype.token = require('./reepay/token');\nReepay.prototype.validate = require('./reepay/validate');",
    "deps": {
      "yields/merge": "components/yields-merge@1.0.0/index.js",
      "component/type": "components/component-type@1.1.0/index.js",
      "visionmedia/node-querystring": "components/visionmedia-node-querystring@0.6.6/index.js",
      "webmodules/jsonp": "components/webmodules-jsonp@0.2.0/index.js",
      "./version": "lib/version.js",
      "./errors": "lib/errors.js",
      "./reepay/open": "lib/reepay/open.js",
      "./reepay/token": "lib/reepay/token.js",
      "./reepay/validate": "lib/reepay/validate.js"
    }
  },
  "components/yields-merge@1.0.0/index.js": {
    "id": "components/yields-merge@1.0.0/index.js",
    "type": "js",
    "mtime": 1360690705000,
    "src": "\n/**\n * merge `b`'s properties with `a`'s.\n *\n * example:\n *\n *        var user = {};\n *        merge(user, console);\n *        // > { log: fn, dir: fn ..}\n *\n * @param {Object} a\n * @param {Object} b\n * @return {Object}\n */\n\nmodule.exports = function (a, b) {\n  for (var k in b) a[k] = b[k];\n  return a;\n};\n",
    "deps": {}
  },
  "components/component-type@1.1.0/index.js": {
    "id": "components/component-type@1.1.0/index.js",
    "type": "js",
    "mtime": 1418045096000,
    "src": "/**\n * toString ref.\n */\n\nvar toString = Object.prototype.toString;\n\n/**\n * Return the type of `val`.\n *\n * @param {Mixed} val\n * @return {String}\n * @api public\n */\n\nmodule.exports = function(val){\n  switch (toString.call(val)) {\n    case '[object Date]': return 'date';\n    case '[object RegExp]': return 'regexp';\n    case '[object Arguments]': return 'arguments';\n    case '[object Array]': return 'array';\n    case '[object Error]': return 'error';\n  }\n\n  if (val === null) return 'null';\n  if (val === undefined) return 'undefined';\n  if (val !== val) return 'nan';\n  if (val && val.nodeType === 1) return 'element';\n\n  val = val.valueOf\n    ? val.valueOf()\n    : Object.prototype.valueOf.apply(val)\n\n  return typeof val;\n};\n",
    "deps": {}
  },
  "components/visionmedia-node-querystring@0.6.6/index.js": {
    "id": "components/visionmedia-node-querystring@0.6.6/index.js",
    "type": "js",
    "mtime": 1386088676000,
    "src": "/**\n * Object#toString() ref for stringify().\n */\n\nvar toString = Object.prototype.toString;\n\n/**\n * Object#hasOwnProperty ref\n */\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Array#indexOf shim.\n */\n\nvar indexOf = typeof Array.prototype.indexOf === 'function'\n  ? function(arr, el) { return arr.indexOf(el); }\n  : function(arr, el) {\n      for (var i = 0; i < arr.length; i++) {\n        if (arr[i] === el) return i;\n      }\n      return -1;\n    };\n\n/**\n * Array.isArray shim.\n */\n\nvar isArray = Array.isArray || function(arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n/**\n * Object.keys shim.\n */\n\nvar objectKeys = Object.keys || function(obj) {\n  var ret = [];\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      ret.push(key);\n    }\n  }\n  return ret;\n};\n\n/**\n * Array#forEach shim.\n */\n\nvar forEach = typeof Array.prototype.forEach === 'function'\n  ? function(arr, fn) { return arr.forEach(fn); }\n  : function(arr, fn) {\n      for (var i = 0; i < arr.length; i++) fn(arr[i]);\n    };\n\n/**\n * Array#reduce shim.\n */\n\nvar reduce = function(arr, fn, initial) {\n  if (typeof arr.reduce === 'function') return arr.reduce(fn, initial);\n  var res = initial;\n  for (var i = 0; i < arr.length; i++) res = fn(res, arr[i]);\n  return res;\n};\n\n/**\n * Cache non-integer test regexp.\n */\n\nvar isint = /^[0-9]+$/;\n\nfunction promote(parent, key) {\n  if (parent[key].length == 0) return parent[key] = {}\n  var t = {};\n  for (var i in parent[key]) {\n    if (hasOwnProperty.call(parent[key], i)) {\n      t[i] = parent[key][i];\n    }\n  }\n  parent[key] = t;\n  return t;\n}\n\nfunction parse(parts, parent, key, val) {\n  var part = parts.shift();\n  \n  // illegal\n  if (Object.getOwnPropertyDescriptor(Object.prototype, key)) return;\n  \n  // end\n  if (!part) {\n    if (isArray(parent[key])) {\n      parent[key].push(val);\n    } else if ('object' == typeof parent[key]) {\n      parent[key] = val;\n    } else if ('undefined' == typeof parent[key]) {\n      parent[key] = val;\n    } else {\n      parent[key] = [parent[key], val];\n    }\n    // array\n  } else {\n    var obj = parent[key] = parent[key] || [];\n    if (']' == part) {\n      if (isArray(obj)) {\n        if ('' != val) obj.push(val);\n      } else if ('object' == typeof obj) {\n        obj[objectKeys(obj).length] = val;\n      } else {\n        obj = parent[key] = [parent[key], val];\n      }\n      // prop\n    } else if (~indexOf(part, ']')) {\n      part = part.substr(0, part.length - 1);\n      if (!isint.test(part) && isArray(obj)) obj = promote(parent, key);\n      parse(parts, obj, part, val);\n      // key\n    } else {\n      if (!isint.test(part) && isArray(obj)) obj = promote(parent, key);\n      parse(parts, obj, part, val);\n    }\n  }\n}\n\n/**\n * Merge parent key/val pair.\n */\n\nfunction merge(parent, key, val){\n  if (~indexOf(key, ']')) {\n    var parts = key.split('[')\n      , len = parts.length\n      , last = len - 1;\n    parse(parts, parent, 'base', val);\n    // optimize\n  } else {\n    if (!isint.test(key) && isArray(parent.base)) {\n      var t = {};\n      for (var k in parent.base) t[k] = parent.base[k];\n      parent.base = t;\n    }\n    set(parent.base, key, val);\n  }\n\n  return parent;\n}\n\n/**\n * Compact sparse arrays.\n */\n\nfunction compact(obj) {\n  if ('object' != typeof obj) return obj;\n\n  if (isArray(obj)) {\n    var ret = [];\n\n    for (var i in obj) {\n      if (hasOwnProperty.call(obj, i)) {\n        ret.push(obj[i]);\n      }\n    }\n\n    return ret;\n  }\n\n  for (var key in obj) {\n    obj[key] = compact(obj[key]);\n  }\n\n  return obj;\n}\n\n/**\n * Parse the given obj.\n */\n\nfunction parseObject(obj){\n  var ret = { base: {} };\n\n  forEach(objectKeys(obj), function(name){\n    merge(ret, name, obj[name]);\n  });\n\n  return compact(ret.base);\n}\n\n/**\n * Parse the given str.\n */\n\nfunction parseString(str){\n  var ret = reduce(String(str).split('&'), function(ret, pair){\n    var eql = indexOf(pair, '=')\n      , brace = lastBraceInKey(pair)\n      , key = pair.substr(0, brace || eql)\n      , val = pair.substr(brace || eql, pair.length)\n      , val = val.substr(indexOf(val, '=') + 1, val.length);\n\n    // ?foo\n    if ('' == key) key = pair, val = '';\n    if ('' == key) return ret;\n\n    return merge(ret, decode(key), decode(val));\n  }, { base: {} }).base;\n\n  return compact(ret);\n}\n\n/**\n * Parse the given query `str` or `obj`, returning an object.\n *\n * @param {String} str | {Object} obj\n * @return {Object}\n * @api public\n */\n\nexports.parse = function(str){\n  if (null == str || '' == str) return {};\n  return 'object' == typeof str\n    ? parseObject(str)\n    : parseString(str);\n};\n\n/**\n * Turn the given `obj` into a query string\n *\n * @param {Object} obj\n * @return {String}\n * @api public\n */\n\nvar stringify = exports.stringify = function(obj, prefix) {\n  if (isArray(obj)) {\n    return stringifyArray(obj, prefix);\n  } else if ('[object Object]' == toString.call(obj)) {\n    return stringifyObject(obj, prefix);\n  } else if ('string' == typeof obj) {\n    return stringifyString(obj, prefix);\n  } else {\n    return prefix + '=' + encodeURIComponent(String(obj));\n  }\n};\n\n/**\n * Stringify the given `str`.\n *\n * @param {String} str\n * @param {String} prefix\n * @return {String}\n * @api private\n */\n\nfunction stringifyString(str, prefix) {\n  if (!prefix) throw new TypeError('stringify expects an object');\n  return prefix + '=' + encodeURIComponent(str);\n}\n\n/**\n * Stringify the given `arr`.\n *\n * @param {Array} arr\n * @param {String} prefix\n * @return {String}\n * @api private\n */\n\nfunction stringifyArray(arr, prefix) {\n  var ret = [];\n  if (!prefix) throw new TypeError('stringify expects an object');\n  for (var i = 0; i < arr.length; i++) {\n    ret.push(stringify(arr[i], prefix + '[' + i + ']'));\n  }\n  return ret.join('&');\n}\n\n/**\n * Stringify the given `obj`.\n *\n * @param {Object} obj\n * @param {String} prefix\n * @return {String}\n * @api private\n */\n\nfunction stringifyObject(obj, prefix) {\n  var ret = []\n    , keys = objectKeys(obj)\n    , key;\n\n  for (var i = 0, len = keys.length; i < len; ++i) {\n    key = keys[i];\n    if ('' == key) continue;\n    if (null == obj[key]) {\n      ret.push(encodeURIComponent(key) + '=');\n    } else {\n      ret.push(stringify(obj[key], prefix\n        ? prefix + '[' + encodeURIComponent(key) + ']'\n        : encodeURIComponent(key)));\n    }\n  }\n\n  return ret.join('&');\n}\n\n/**\n * Set `obj`'s `key` to `val` respecting\n * the weird and wonderful syntax of a qs,\n * where \"foo=bar&foo=baz\" becomes an array.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {String} val\n * @api private\n */\n\nfunction set(obj, key, val) {\n  var v = obj[key];\n  if (Object.getOwnPropertyDescriptor(Object.prototype, key)) return;\n  if (undefined === v) {\n    obj[key] = val;\n  } else if (isArray(v)) {\n    v.push(val);\n  } else {\n    obj[key] = [v, val];\n  }\n}\n\n/**\n * Locate last brace in `str` within the key.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction lastBraceInKey(str) {\n  var len = str.length\n    , brace\n    , c;\n  for (var i = 0; i < len; ++i) {\n    c = str[i];\n    if (']' == c) brace = false;\n    if ('[' == c) brace = true;\n    if ('=' == c && !brace) return i;\n  }\n}\n\n/**\n * Decode `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nfunction decode(str) {\n  try {\n    return decodeURIComponent(str.replace(/\\+/g, ' '));\n  } catch (err) {\n    return str;\n  }\n}\n",
    "deps": {}
  },
  "lib/version.js": {
    "id": "lib/version.js",
    "type": "js",
    "mtime": 1430220475000,
    "src": "/**\n * Current package/component version.\n */\n\nmodule.exports = '1.0.1';",
    "deps": {}
  },
  "lib/reepay/open.js": {
    "id": "lib/reepay/open.js",
    "type": "js",
    "mtime": 1430229539000,
    "src": "/*!\n * Module dependencies.\n */\n\nvar type = require('component/type');\nvar qs = require('visionmedia/node-querystring');\nvar errors = require('../errors');\n\n/**\n * expose\n */\n\nmodule.exports = open;\n\n/**\n * Issues an API request to a popup window.\n *\n * TODO(*): configurable window name?\n * TODO(*): configurable window properties?\n *\n * @param {String} url\n * @param {Object} [data]\n * @param {Function} [done]\n * @throws {Error} If `configure` has not been called.\n * @return {Window}\n * @private\n */\n\nfunction open(url, data, done) {\n\n    if (false === this.configured) {\n        throw errors('not-configured');\n    }\n\n    if ('function' == type(data)) {\n        done = data;\n        data = {};\n    }\n\n    data = data || {};\n    data.version = this.version;\n    data.event = 'reepay-open-' + this.id++;\n    data.key = this.config.publicKey;\n    this.once(data.event, done);\n\n    if (!/^https?:\\/\\//.test(url)) url = this.url(url);\n    url += (~url.indexOf('?') ? '&' : '?') + qs.stringify(data);\n\n    this.relay(function () {\n        window.open(url);\n    });\n};",
    "deps": {
      "component/type": "components/component-type@1.1.0/index.js",
      "visionmedia/node-querystring": "components/visionmedia-node-querystring@0.6.6/index.js",
      "../errors": "lib/errors.js"
    }
  },
  "lib/reepay/validate.js": {
    "id": "lib/reepay/validate.js",
    "type": "js",
    "mtime": 1431521937000,
    "src": "/* !\n * Module dependencies.\n */\nvar trim = require('component/trim');\nvar index = require('component/indexof');\nvar parseCard = require('../util/parse-card');\n\nvar formatCardNumberCallback = null;\n\n// Cards types\ndefaultFormat = /(\\d{1,4})/g;\n\ncards = [\n    {\n        type: 'amex',\n        pattern: /^3[47]/,\n        format: /(\\d{1,4})(\\d{1,6})?(\\d{1,5})?/,\n        length: [15],\n        cvcLength: [3, 4],\n        luhn: true\n  }, {\n        type: 'dankort',\n        pattern: /^5019/,\n        format: defaultFormat,\n        length: [16],\n        cvcLength: [3],\n        luhn: true\n  }, {\n        type: 'dinersclub',\n        pattern: /^(36|38|30[0-5])/,\n        format: defaultFormat,\n        length: [14],\n        cvcLength: [3],\n        luhn: true\n  }, {\n        type: 'discover',\n        pattern: /^(6011|65|64[4-9]|622)/,\n        format: defaultFormat,\n        length: [16],\n        cvcLength: [3],\n        luhn: true\n  }, {\n        type: 'jcb',\n        pattern: /^35/,\n        format: defaultFormat,\n        length: [16],\n        cvcLength: [3],\n        luhn: true\n  }, {\n        type: 'laser',\n        pattern: /^(6706|6771|6709)/,\n        format: defaultFormat,\n        length: [16, 17, 18, 19],\n        cvcLength: [3],\n        luhn: true\n  }, {\n        type: 'maestro',\n        pattern: /^(5018|5020|5038|6304|6759|676[1-3])/,\n        format: defaultFormat,\n        length: [12, 13, 14, 15, 16, 17, 18, 19],\n        cvcLength: [3],\n        luhn: true\n  }, {\n        type: 'mastercard',\n        pattern: /^5[1-5]/,\n        format: defaultFormat,\n        length: [16],\n        cvcLength: [3],\n        luhn: true\n  }, {\n        type: 'unionpay',\n        pattern: /^62/,\n        format: defaultFormat,\n        length: [16, 17, 18, 19],\n        cvcLength: [3],\n        luhn: false\n  }, {\n        type: 'visaelectron',\n        pattern: /^4(026|17500|405|508|844|91[37])/,\n        format: defaultFormat,\n        length: [16],\n        cvcLength: [3],\n        luhn: true\n  }, {\n        type: 'visa',\n        pattern: /^4/,\n        format: defaultFormat,\n        length: [13, 14, 15, 16],\n        cvcLength: [3],\n        luhn: true\n  }\n];\n\n\nvar options = null;\n\ncardFromNumber = function (num) {\n    var card, _i, _len;\n    num = (num + '').replace(/\\D/g, '');\n    for (_i = 0, _len = cards.length; _i < _len; _i++) {\n        card = cards[_i];\n        if (card.pattern.test(num)) {\n            return card;\n        }\n    }\n};\n\nformatCardNumber = function (e) {\n\n\n    var card, digit, groups, upperLength, _ref, num;\n    digit = String.fromCharCode(e.which);\n    element = e.target;\n    value = $(element).val();\n    num = value + digit;\n\n    if (!/^\\d+$/.test(digit)) {\n        return;\n    }\n\n    card = cardFromNumber(num);\n    if (!card) {\n        return value + digit;\n    }\n\n    upperLength = card.length[card.length.length - 1];\n    num = num.replace(/\\D/g, '');\n    num = num.slice(0, +upperLength || 9e9);\n    if (card.format.global) {\n        var val = (_ref = num.match(card.format)) != null ? _ref.join(' ') : void 0;\n        $(element).val(val);\n    } else {\n        groups = card.format.exec(num);\n        if (groups != null) {\n            groups.shift();\n        }\n        return groups != null ? groups.join(' ') : void 0;\n    }\n\n    e.preventDefault();\n    if (formatCardNumberCallback != null) {\n        formatCardNumberCallback(card);\n    }\n\n\n\n}\n\n\nmodule.exports = {\n\n    /**\n     * Format card number and check it on every keystroke.\n     *\n     * @param {String}\n     * @param {Function}\n     * @return callback data\n     */\n    formatCardNumber: function (element, callback) {\n        formatCardNumberCallback = callback;\n        $(element).keypress(formatCardNumber);\n    },\n    /**\n     * Validates a credit card number via luhn algorithm.\n     *\n     * @param {Number|String} number The card number.\n     * @return {Boolean}\n     * @see https://sites.google.com/site/abapexamples/javascript/luhn-validation\n     */\n\n    cardNumber: function (number) {\n        var str = parseCard(number);\n        var ca, sum = 0,\n            mul = 1;\n        var i = str.length;\n\n        while (i--) {\n            ca = parseInt(str.charAt(i), 10) * mul;\n            sum += ca - (ca > 9) * 9;\n            mul ^= 3;\n        }\n\n        return sum % 10 === 0 && sum > 0;\n    },\n    /**\n     * Returns the type of the card number as a string.\n     *\n     * @param {Number|String} number The card number\n     * @param {Boolean} partial detect card type on a partial (incomplete) number\n     * @return {String} card type\n     */\n\n    cardType: function (num) {\n        var card, _i, _len;\n        num = (num + '').replace(/\\D/g, '');\n        for (_i = 0, _len = cards.length; _i < _len; _i++) {\n            card = cards[_i];\n            if (card.pattern.test(num)) {\n                return card.type;\n            }\n        }\n    },\n    /**\n     * Validates whether an expiry month is present or future.\n     *\n     * @param {Numer|String} month The 2 digit month\n     * @param {Numer|String} year The 2 or 4 digit year\n     * @return {Boolean}\n     */\n\n    expiry: function (month, year) {\n        month = parseInt(month, 10) - 1;\n        if (month < 0 || month > 11) return false;\n        year = parseInt(year, 10);\n        year += year < 100 ? 2000 : 0;\n\n        var expiry = new Date;\n        expiry.setYear(year);\n        expiry.setDate(1);\n        expiry.setHours(0);\n        expiry.setMinutes(0);\n        expiry.setSeconds(0);\n        expiry.setMonth(month + 1);\n        return new Date < expiry;\n    },\n    /**\n     * Validates whether a number looks like a cvv.\n     *\n     * e.g.: '123', '0321'\n     *\n     * @param {Number|String} number The card verification value\n     * @return {Boolean}\n     */\n\n    cvv: function (number) {\n        number = trim(number + '');\n        return /^\\d+$/.test(number) && (number.length === 3 || number.length === 4);\n    }\n};",
    "deps": {
      "component/trim": "components/component-trim@0.0.1/index.js",
      "component/indexof": "components/component-indexof@0.0.3/index.js",
      "../util/parse-card": "lib/util/parse-card.js"
    }
  },
  "components/component-trim@0.0.1/index.js": {
    "id": "components/component-trim@0.0.1/index.js",
    "type": "js",
    "mtime": 1381360956000,
    "src": "\nexports = module.exports = trim;\n\nfunction trim(str){\n  if (str.trim) return str.trim();\n  return str.replace(/^\\s*|\\s*$/g, '');\n}\n\nexports.left = function(str){\n  if (str.trimLeft) return str.trimLeft();\n  return str.replace(/^\\s*/, '');\n};\n\nexports.right = function(str){\n  if (str.trimRight) return str.trimRight();\n  return str.replace(/\\s*$/, '');\n};\n",
    "deps": {}
  },
  "components/component-indexof@0.0.3/index.js": {
    "id": "components/component-indexof@0.0.3/index.js",
    "type": "js",
    "mtime": 1392082405000,
    "src": "module.exports = function(arr, obj){\n  if (arr.indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};",
    "deps": {}
  },
  "lib/util/parse-card.js": {
    "id": "lib/util/parse-card.js",
    "type": "js",
    "mtime": 1430208857000,
    "src": "/**\n * Removes dashes and spaces from a card number.\n *\n * @param {Number|String} number\n * @return {String} parsed card number\n */\n\nmodule.exports = function parseCard(number) {\n    return (number || '').toString().replace(/[-\\s]/g, '');\n};",
    "deps": {}
  },
  "lib/errors.js": {
    "id": "lib/errors.js",
    "type": "js",
    "mtime": 1430229674000,
    "src": "/**\n * dependencies\n */\n\nvar mixin = require('kewah/mixin');\n\n/**\n * Export `errors`.\n */\n\nmodule.exports = exports = errors;\n\n/**\n * Error accessor.\n *\n * @param {String} name\n * @param {Object} options\n * @return {Error}\n */\n\nfunction errors(name, options) {\n    return errors.get(name, options);\n}\n\n/**\n * Defined errors.\n *\n * @type {Object}\n * @private\n */\n\nerrors.map = {};\n\n/**\n * Base url for documention.\n *\n * @type {String}\n * @private\n */\n\nerrors.baseURL = '';\n\n/**\n * Sets the `baseURL` for docs.\n *\n * @param {String} url\n * @public\n */\n\nerrors.doc = function (baseURL) {\n    errors.baseURL = baseURL;\n};\n\n/**\n * Gets errors defined by `name`.\n *\n * @param {String} name\n * @param {Object} context\n * @return {Error}\n * @public\n */\n\nerrors.get = function (name, context) {\n    if (!(name in errors.map)) {\n        throw new Error('invalid error');\n    } else {\n        return new errors.map[name](context);\n    }\n};\n\n/**\n * Registers an error defined by `name` with `config`.\n *\n * @param {String} name\n * @param {Object} config\n * @return {Error}\n * @public\n */\n\nerrors.add = function (name, config) {\n    config = config || {};\n\n    function ReepayError(context) {\n        Error.call(this);\n\n        this.name = this.code = name;\n        this.message = config.message;\n        mixin(this, context || {});\n\n        if (config.help) {\n            this.help = errors.baseURL + config.help;\n            this.message += ' (need help? ' + this.help + ')';\n        }\n    };\n\n    ReepayError.prototype = new Error();\n    return errors.map[name] = ReepayError;\n};\n\n/**\n * Internal definations.\n *\n * TODO(gjohnson): open source this as a component\n * and move these out.\n */\n\nerrors.doc('https://docs.reepay.com/js');\n\nerrors.add('already-configured', {\n    message: 'Configuration may only be set once.',\n    help: '#identify-your-site'\n});\n\nerrors.add('not-configured', {\n    message: 'Not configured. You must first call reepay.configure().',\n    help: '#identify-your-site'\n});\n\nerrors.add('missing-public-key', {\n    message: 'The publicKey setting is required.',\n    help: '#identify-your-site'\n});\n\nerrors.add('api-error', {\n    message: 'There was an error with your request.'\n});\n\nerrors.add('api-timeout', {\n    message: 'The API request timed out.'\n});\n\nerrors.add('validation', {\n    message: 'There was an error validating your request.'\n});\n\nerrors.add('missing-callback', {\n    message: 'Missing callback'\n});\n\nerrors.add('invalid-options', {\n    message: 'Options must be an object'\n});\n\nerrors.add('missing-plan', {\n    message: 'A plan must be specified.'\n});\n\nerrors.add('missing-coupon', {\n    message: 'A coupon must be specified.'\n});\n\nerrors.add('invalid-item', {\n    message: 'The given item does not appear to be a valid reepay plan, coupon, addon, or taxable address.'\n});\n\nerrors.add('invalid-addon', {\n    message: 'The given addon_code is not among the valid addons for the specified plan.'\n});\n\nerrors.add('invalid-currency', {\n    message: 'The given currency is not among the valid codes for the specified plan.'\n});\n\nerrors.add('unremovable-item', {\n    message: 'The given item cannot be removed.'\n});",
    "deps": {
      "kewah/mixin": "components/kewah-mixin@0.1.0/index.js"
    }
  },
  "components/kewah-mixin@0.1.0/index.js": {
    "id": "components/kewah-mixin@0.1.0/index.js",
    "type": "js",
    "mtime": 1372545221000,
    "src": "if (typeof Object.keys === 'function') {\n  module.exports = function(to, from) {\n    Object.keys(from).forEach(function(property) {\n      Object.defineProperty(to, property, Object.getOwnPropertyDescriptor(from, property));\n    });\n  };\n} else {\n  module.exports = function(to, from) {\n    for (var property in from) {\n      if (from.hasOwnProperty(property)) {\n        to[property] = from[property];\n      }\n    }\n  };\n}\n",
    "deps": {}
  },
  "components/webmodules-jsonp@0.2.0/index.js": {
    "id": "components/webmodules-jsonp@0.2.0/index.js",
    "type": "js",
    "mtime": 1426723638000,
    "src": "/**\n * Module dependencies\n */\n\nvar debug = require('debug')('jsonp');\n\n/**\n * Module exports.\n */\n\nmodule.exports = jsonp;\n\n/**\n * Callback index.\n */\n\nvar count = 0;\n\n/**\n * Noop function.\n */\n\nfunction noop(){}\n\n/**\n * JSONP handler\n *\n * Options:\n *  - param {String} qs parameter (`callback`)\n *  - prefix {String} qs parameter (`__jp`)\n *  - name {String} qs parameter (`prefix` + incr)\n *  - timeout {Number} how long after a timeout error is emitted (`60000`)\n *\n * @param {String} url\n * @param {Object|Function} optional options / callback\n * @param {Function} optional callback\n */\n\nfunction jsonp(url, opts, fn){\n  if ('function' == typeof opts) {\n    fn = opts;\n    opts = {};\n  }\n  if (!opts) opts = {};\n\n  var prefix = opts.prefix || '__jp';\n\n  // use the callback name that was passed if one was provided.\n  // otherwise generate a unique name by incrementing our counter.\n  var id = opts.name || (prefix + (count++));\n\n  var param = opts.param || 'callback';\n  var timeout = null != opts.timeout ? opts.timeout : 60000;\n  var enc = encodeURIComponent;\n  var target = document.getElementsByTagName('script')[0] || document.head;\n  var script;\n  var timer;\n\n\n  if (timeout) {\n    timer = setTimeout(function(){\n      cleanup();\n      if (fn) fn(new Error('Timeout'));\n    }, timeout);\n  }\n\n  function cleanup(){\n    if (script.parentNode) script.parentNode.removeChild(script);\n    window[id] = noop;\n    if (timer) clearTimeout(timer);\n  }\n\n  function cancel(){\n    if (window[id]) {\n      cleanup();\n    }\n  }\n\n  window[id] = function(data){\n    debug('jsonp got', data);\n    cleanup();\n    if (fn) fn(null, data);\n  };\n\n  // add qs component\n  url += (~url.indexOf('?') ? '&' : '?') + param + '=' + enc(id);\n  url = url.replace('?&', '?');\n\n  debug('jsonp req \"%s\"', url);\n\n  // create script\n  script = document.createElement('script');\n  script.src = url;\n  target.parentNode.insertBefore(script, target);\n\n  return cancel;\n}\n",
    "deps": {
      "debug": "components/visionmedia-debug@2.1.3/browser.js"
    }
  },
  "components/visionmedia-debug@2.1.3/browser.js": {
    "id": "components/visionmedia-debug@2.1.3/browser.js",
    "type": "js",
    "mtime": 1426272615000,
    "src": "\n/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Use chrome.storage.local if we are in an app\n */\n\nvar storage;\n\nif (typeof chrome !== 'undefined' && typeof chrome.storage !== 'undefined')\n  storage = chrome.storage.local;\nelse\n  storage = localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  return ('WebkitAppearance' in document.documentElement.style) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (window.console && (console.firebug || (console.exception && console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31);\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  return JSON.stringify(v);\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs() {\n  var args = arguments;\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return args;\n\n  var c = 'color: ' + this.color;\n  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n  return args;\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      storage.removeItem('debug');\n    } else {\n      storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = storage.debug;\n  } catch(e) {}\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage(){\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n",
    "deps": {
      "./debug": "components/visionmedia-debug@2.1.3/debug.js"
    }
  },
  "components/visionmedia-debug@2.1.3/debug.js": {
    "id": "components/visionmedia-debug@2.1.3/debug.js",
    "type": "js",
    "mtime": 1426272615000,
    "src": "\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = debug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lowercased letter, i.e. \"n\".\n */\n\nexports.formatters = {};\n\n/**\n * Previously assigned color.\n */\n\nvar prevColor = 0;\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n *\n * @return {Number}\n * @api private\n */\n\nfunction selectColor() {\n  return exports.colors[prevColor++ % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction debug(namespace) {\n\n  // define the `disabled` version\n  function disabled() {\n  }\n  disabled.enabled = false;\n\n  // define the `enabled` version\n  function enabled() {\n\n    var self = enabled;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // add the `color` if not set\n    if (null == self.useColors) self.useColors = exports.useColors();\n    if (null == self.color && self.useColors) self.color = selectColor();\n\n    var args = Array.prototype.slice.call(arguments);\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %o\n      args = ['%o'].concat(args);\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    if ('function' === typeof exports.formatArgs) {\n      args = exports.formatArgs.apply(self, args);\n    }\n    var logFn = enabled.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n  enabled.enabled = true;\n\n  var fn = exports.enabled(namespace) ? enabled : disabled;\n\n  fn.namespace = namespace;\n\n  return fn;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  var split = (namespaces || '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n",
    "deps": {
      "ms": "components/rauchg-ms.js@0.7.0/index.js"
    }
  },
  "components/rauchg-ms.js@0.7.0/index.js": {
    "id": "components/rauchg-ms.js@0.7.0/index.js",
    "type": "js",
    "mtime": 1416815896000,
    "src": "/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} options\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options){\n  options = options || {};\n  if ('string' == typeof val) return parse(val);\n  return options.long\n    ? long(val)\n    : short(val);\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n  if (!match) return;\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction short(ms) {\n  if (ms >= d) return Math.round(ms / d) + 'd';\n  if (ms >= h) return Math.round(ms / h) + 'h';\n  if (ms >= m) return Math.round(ms / m) + 'm';\n  if (ms >= s) return Math.round(ms / s) + 's';\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction long(ms) {\n  return plural(ms, d, 'day')\n    || plural(ms, h, 'hour')\n    || plural(ms, m, 'minute')\n    || plural(ms, s, 'second')\n    || ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) return;\n  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n",
    "deps": {}
  },
  "lib/reepay/token.js": {
    "id": "lib/reepay/token.js",
    "type": "js",
    "mtime": 1431521225000,
    "src": "/*!\n * Module dependencies.\n */\nvar bind = require('component/bind');\nvar each = require('component/each');\nvar type = require('component/type');\nvar index = require('component/indexof');\nvar dom = require('../util/dom');\nvar parseCard = require('../util/parse-card');\nvar errors = require('../errors');\n\n/**\n * expose\n */\n\nmodule.exports = token;\n\n/**\n * Fields that are sent to API.\n *\n * @type {Array}\n * @private\n */\n\nvar fields = [\n    'first_name'\n  , 'last_name'\n  , 'cardnumber'\n  , 'month'\n  , 'year'\n  , 'cvv'\n  , 'address1'\n  , 'address2'\n  , 'country'\n  , 'city'\n  , 'state'\n  , 'postal_code'\n  , 'phone'\n  , 'vat_number'\n  , 'token'\n];\n\n/**\n * Generates a token from customer data.\n *\n * The callback signature: `err, response` where `err` is a\n * connection, request, or server error, and `response` is the\n * reepay service response. The generated token is accessed\n * at `response.token`.\n *\n * @param {Object|HTMLFormElement} options Billing properties or an HTMLFormElement\n * with children corresponding to billing properties via 'data-reurly' attributes.\n * @param {String} options.first_name customer first name\n * @param {String} options.last_name customer last name\n * @param {String|Number} options.number card number\n * @param {String|Number} options.month card expiration month\n * @param {String|Number} options.year card expiration year\n * @param {String|Number} options.cvv card verification value\n * @param {String} [options.address1]\n * @param {String} [options.address2]\n * @param {String} [options.country]\n * @param {String} [options.city]\n * @param {String} [options.state]\n * @param {String|Number} [options.postal_code]\n * @param {Function} done callback\n */\n\nfunction token(options, done) {\n    var open = bind(this, this.open);\n    var data = normalize(options);\n    var input = data.values;\n    var userErrors = validate.call(this, input);\n\n    if ('function' !== type(done)) {\n        throw errors('missing-callback');\n    }\n\n    if (userErrors.length) {\n        return done(errors('validation', {\n            fields: userErrors\n        }));\n    }\n\n    this.request('post', '/token', input, function (err, res) {\n        if (err) return done(err);\n        if (data.fields.token && res.id) {\n            data.fields.token.value = res.id;\n        }\n        done(null, res);\n    });\n};\n\n/**\n * Parses options out of a form element and normalizes according to rules.\n *\n * @param {Object|HTMLFormElement} options\n * @return {Object}\n */\n\nfunction normalize(options) {\n    var el = dom.element(options);\n    var data = {\n        fields: {},\n        values: {}\n    };\n\n    if (el && 'form' === el.nodeName.toLowerCase()) {\n        each(el.querySelectorAll('[data-reepay]'), function (field) {\n            var name = dom.data(field, 'reepay');\n            if (~index(fields, name)) {\n                data.fields[name] = field;\n                data.values[name] = dom.value(field);\n            }\n        });\n    } else {\n        data.values = options;\n    }\n\n    data.values.cardnumber = parseCard(data.values.cardnumber);\n\n    return data;\n}\n\n/**\n * Checks user input on a token call\n *\n * @param {Object} input\n * @return {Array} indicates which fields are not valid\n */\n\nfunction validate(input) {\n    var errors = [];\n\n    if (!this.validate.cardNumber(input.cardnumber)) {\n        errors.push('cardnumber');\n    }\n\n    if (!this.validate.expiry(input.month, input.year)) {\n        errors.push('month', 'year');\n    }\n\n    if (input.cvv && !this.validate.cvv(input.cvv)) {\n        errors.push('cvv');\n    }\n\n    each(this.config.required, function (field) {\n        if (!input[field] && ~index(fields, field)) {\n            errors.push(field);\n        }\n    });\n\n    return errors;\n}",
    "deps": {
      "component/bind": "components/component-bind@1.0.0/index.js",
      "component/each": "components/component-each@0.2.5/index.js",
      "component/type": "components/component-type@1.1.0/index.js",
      "component/indexof": "components/component-indexof@0.0.3/index.js",
      "../util/dom": "lib/util/dom.js",
      "../util/parse-card": "lib/util/parse-card.js",
      "../errors": "lib/errors.js"
    }
  },
  "components/component-bind@1.0.0/index.js": {
    "id": "components/component-bind@1.0.0/index.js",
    "type": "js",
    "mtime": 1401232080000,
    "src": "/**\n * Slice reference.\n */\n\nvar slice = [].slice;\n\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function(obj, fn){\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function(){\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  }\n};\n",
    "deps": {}
  },
  "components/component-each@0.2.5/index.js": {
    "id": "components/component-each@0.2.5/index.js",
    "type": "js",
    "mtime": 1404741681000,
    "src": "\n/**\n * Module dependencies.\n */\n\ntry {\n  var type = require('type');\n} catch (err) {\n  var type = require('component-type');\n}\n\nvar toFunction = require('to-function');\n\n/**\n * HOP reference.\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Iterate the given `obj` and invoke `fn(val, i)`\n * in optional context `ctx`.\n *\n * @param {String|Array|Object} obj\n * @param {Function} fn\n * @param {Object} [ctx]\n * @api public\n */\n\nmodule.exports = function(obj, fn, ctx){\n  fn = toFunction(fn);\n  ctx = ctx || this;\n  switch (type(obj)) {\n    case 'array':\n      return array(obj, fn, ctx);\n    case 'object':\n      if ('number' == typeof obj.length) return array(obj, fn, ctx);\n      return object(obj, fn, ctx);\n    case 'string':\n      return string(obj, fn, ctx);\n  }\n};\n\n/**\n * Iterate string chars.\n *\n * @param {String} obj\n * @param {Function} fn\n * @param {Object} ctx\n * @api private\n */\n\nfunction string(obj, fn, ctx) {\n  for (var i = 0; i < obj.length; ++i) {\n    fn.call(ctx, obj.charAt(i), i);\n  }\n}\n\n/**\n * Iterate object keys.\n *\n * @param {Object} obj\n * @param {Function} fn\n * @param {Object} ctx\n * @api private\n */\n\nfunction object(obj, fn, ctx) {\n  for (var key in obj) {\n    if (has.call(obj, key)) {\n      fn.call(ctx, key, obj[key]);\n    }\n  }\n}\n\n/**\n * Iterate array-ish.\n *\n * @param {Array|Object} obj\n * @param {Function} fn\n * @param {Object} ctx\n * @api private\n */\n\nfunction array(obj, fn, ctx) {\n  for (var i = 0; i < obj.length; ++i) {\n    fn.call(ctx, obj[i], i);\n  }\n}\n",
    "deps": {
      "type": "components/component-type@1.0.0/index.js",
      "component-type": "components/component-type@1.0.0/index.js",
      "to-function": "components/component-to-function@2.0.5/index.js"
    }
  },
  "components/component-type@1.0.0/index.js": {
    "id": "components/component-type@1.0.0/index.js",
    "type": "js",
    "mtime": 1363138036000,
    "src": "\n/**\n * toString ref.\n */\n\nvar toString = Object.prototype.toString;\n\n/**\n * Return the type of `val`.\n *\n * @param {Mixed} val\n * @return {String}\n * @api public\n */\n\nmodule.exports = function(val){\n  switch (toString.call(val)) {\n    case '[object Function]': return 'function';\n    case '[object Date]': return 'date';\n    case '[object RegExp]': return 'regexp';\n    case '[object Arguments]': return 'arguments';\n    case '[object Array]': return 'array';\n    case '[object String]': return 'string';\n  }\n\n  if (val === null) return 'null';\n  if (val === undefined) return 'undefined';\n  if (val && val.nodeType === 1) return 'element';\n  if (val === Object(val)) return 'object';\n\n  return typeof val;\n};\n",
    "deps": {}
  },
  "lib/util/dom.js": {
    "id": "lib/util/dom.js",
    "type": "js",
    "mtime": 1430229618000,
    "src": "/**\n * dependencies\n */\n\nvar slug = require('ianstormtaylor/to-slug-case');\nvar type = require('component/type');\nvar each = require('component/each');\nvar map = require('component/map');\n\n/**\n * expose\n */\n\nmodule.exports = {\n    element: element,\n    value: value,\n    data: data\n};\n\n/**\n * Detects whether an object is an html element.\n *\n * @param {Mixed} node\n * @return {HTMLElement|Boolean} node\n */\n\nfunction element(node) {\n    var isJQuery = window.jQuery && node instanceof jQuery;\n    var isArray = type(node) === 'array';\n    if (isJQuery || isArray) node = node[0];\n\n    var isElem = typeof HTMLElement !== 'undefined' ? node instanceof HTMLElement : node && node.nodeType === 1;\n\n    return isElem && node;\n};\n\n/**\n * Gets or sets the value of a given HTML form element\n *\n * supports text inputs, radio inputs, and selects\n *\n * @param {HTMLElement} node\n * @return {String} value of the element\n */\n\nfunction value(node, value) {\n    if (!element(node)) return null;\n    return typeof value !== 'undefined' ? valueSet(node, value) : valueGet(node);\n}\n\n/**\n * Gets an HTMLElement's value property in the context of a form\n *\n * @param {HTMLElement} node\n * @return {String} node's value\n */\n\nfunction valueGet(node) {\n    node = element(node);\n\n    var nodeType = node && node.type && node.type.toLowerCase();\n    var value;\n\n    if (!nodeType) {\n        value = '';\n    } else if ('options' in node) {\n        value = node.options[node.selectedIndex].value;\n    } else if (nodeType === 'checkbox') {\n        if (node.checked) value = node.value;\n    } else if (nodeType === 'radio') {\n        var radios = document.querySelectorAll('input[data-reepay=\"' + data(node, 'reepay') + '\"]');\n        each(radios, function (radio) {\n            if (radio.checked) value = radio.value;\n        });\n    } else if ('value' in node) {\n        value = node.value;\n    }\n\n    return value;\n}\n\n/**\n * Updates an element's value property if\n * one exists; else innerText if it exists\n *\n * @param {Array[HTMLElement]} nodes\n * @param {Mixed} value\n */\n\nfunction valueSet(nodes, value) {\n    if (type(nodes) !== 'array') nodes = [nodes];\n    each(nodes, function (node) {\n        if (!node) return;\n        else if ('value' in node)\n            node.value = value;\n        else if ('textContent' in node)\n            node.textContent = value;\n        else if ('innerText' in node)\n            node.innerText = value;\n    });\n}\n\n/**\n * Gets or sets a node's data attribute\n *\n * @param {HTMLElement} node\n * @param {String} key\n * @param {Mixed} [value]\n */\n\nfunction data(node, key, value) {\n    node = element(node);\n    if (!node) return;\n    return typeof value !== 'undefined' ? dataSet(node, key, value) : dataGet(node, key);\n}\n\n/**\n * Gets a node's data attribute\n *\n * @param {HTMLElement} node\n * @param {String} key\n */\n\nfunction dataGet(node, key) {\n    return node.dataset ? node.dataset[key] : node.getAttribute('data-' + slug(key));\n}\n\n/**\n * sets a node's data attribute\n *\n * @param {HTMLElement} node\n * @param {String} key\n * @param {Mixed} value\n */\n\nfunction dataSet(node, key, value) {\n    if (node.dataset) node.dataset[key] = value;\n    else node.setAttribute('data-' + slug(key), value);\n}",
    "deps": {
      "ianstormtaylor/to-slug-case": "components/ianstormtaylor-to-slug-case@0.1.2/index.js",
      "component/type": "components/component-type@1.1.0/index.js",
      "component/each": "components/component-each@0.2.5/index.js",
      "component/map": "components/component-map@0.0.1/index.js"
    }
  },
  "components/ianstormtaylor-to-slug-case@0.1.2/index.js": {
    "id": "components/ianstormtaylor-to-slug-case@0.1.2/index.js",
    "type": "js",
    "mtime": 1380686598000,
    "src": "\nvar toSpace = require('to-space-case');\n\n\n/**\n * Expose `toSlugCase`.\n */\n\nmodule.exports = toSlugCase;\n\n\n/**\n * Convert a `string` to slug case.\n *\n * @param {String} string\n * @return {String}\n */\n\n\nfunction toSlugCase (string) {\n  return toSpace(string).replace(/\\s/g, '-');\n}",
    "deps": {
      "to-space-case": "components/ianstormtaylor-to-space-case@0.1.2/index.js"
    }
  },
  "components/component-to-function@2.0.5/index.js": {
    "id": "components/component-to-function@2.0.5/index.js",
    "type": "js",
    "mtime": 1401237059000,
    "src": "\n/**\n * Module Dependencies\n */\n\nvar expr;\ntry {\n  expr = require('props');\n} catch(e) {\n  expr = require('component-props');\n}\n\n/**\n * Expose `toFunction()`.\n */\n\nmodule.exports = toFunction;\n\n/**\n * Convert `obj` to a `Function`.\n *\n * @param {Mixed} obj\n * @return {Function}\n * @api private\n */\n\nfunction toFunction(obj) {\n  switch ({}.toString.call(obj)) {\n    case '[object Object]':\n      return objectToFunction(obj);\n    case '[object Function]':\n      return obj;\n    case '[object String]':\n      return stringToFunction(obj);\n    case '[object RegExp]':\n      return regexpToFunction(obj);\n    default:\n      return defaultToFunction(obj);\n  }\n}\n\n/**\n * Default to strict equality.\n *\n * @param {Mixed} val\n * @return {Function}\n * @api private\n */\n\nfunction defaultToFunction(val) {\n  return function(obj){\n    return val === obj;\n  };\n}\n\n/**\n * Convert `re` to a function.\n *\n * @param {RegExp} re\n * @return {Function}\n * @api private\n */\n\nfunction regexpToFunction(re) {\n  return function(obj){\n    return re.test(obj);\n  };\n}\n\n/**\n * Convert property `str` to a function.\n *\n * @param {String} str\n * @return {Function}\n * @api private\n */\n\nfunction stringToFunction(str) {\n  // immediate such as \"> 20\"\n  if (/^ *\\W+/.test(str)) return new Function('_', 'return _ ' + str);\n\n  // properties such as \"name.first\" or \"age > 18\" or \"age > 18 && age < 36\"\n  return new Function('_', 'return ' + get(str));\n}\n\n/**\n * Convert `object` to a function.\n *\n * @param {Object} object\n * @return {Function}\n * @api private\n */\n\nfunction objectToFunction(obj) {\n  var match = {};\n  for (var key in obj) {\n    match[key] = typeof obj[key] === 'string'\n      ? defaultToFunction(obj[key])\n      : toFunction(obj[key]);\n  }\n  return function(val){\n    if (typeof val !== 'object') return false;\n    for (var key in match) {\n      if (!(key in val)) return false;\n      if (!match[key](val[key])) return false;\n    }\n    return true;\n  };\n}\n\n/**\n * Built the getter function. Supports getter style functions\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nfunction get(str) {\n  var props = expr(str);\n  if (!props.length) return '_.' + str;\n\n  var val, i, prop;\n  for (i = 0; i < props.length; i++) {\n    prop = props[i];\n    val = '_.' + prop;\n    val = \"('function' == typeof \" + val + \" ? \" + val + \"() : \" + val + \")\";\n\n    // mimic negative lookbehind to avoid problems with nested properties\n    str = stripNested(prop, str, val);\n  }\n\n  return str;\n}\n\n/**\n * Mimic negative lookbehind to avoid problems with nested properties.\n *\n * See: http://blog.stevenlevithan.com/archives/mimic-lookbehind-javascript\n *\n * @param {String} prop\n * @param {String} str\n * @param {String} val\n * @return {String}\n * @api private\n */\n\nfunction stripNested (prop, str, val) {\n  return str.replace(new RegExp('(\\\\.)?' + prop, 'g'), function($0, $1) {\n    return $1 ? $0 : val;\n  });\n}\n",
    "deps": {
      "props": "components/component-props@1.1.2/index.js",
      "component-props": "components/component-props@1.1.2/index.js"
    }
  },
  "components/component-props@1.1.2/index.js": {
    "id": "components/component-props@1.1.2/index.js",
    "type": "js",
    "mtime": 1396149195000,
    "src": "/**\n * Global Names\n */\n\nvar globals = /\\b(this|Array|Date|Object|Math|JSON)\\b/g;\n\n/**\n * Return immediate identifiers parsed from `str`.\n *\n * @param {String} str\n * @param {String|Function} map function or prefix\n * @return {Array}\n * @api public\n */\n\nmodule.exports = function(str, fn){\n  var p = unique(props(str));\n  if (fn && 'string' == typeof fn) fn = prefixed(fn);\n  if (fn) return map(str, p, fn);\n  return p;\n};\n\n/**\n * Return immediate identifiers in `str`.\n *\n * @param {String} str\n * @return {Array}\n * @api private\n */\n\nfunction props(str) {\n  return str\n    .replace(/\\.\\w+|\\w+ *\\(|\"[^\"]*\"|'[^']*'|\\/([^/]+)\\//g, '')\n    .replace(globals, '')\n    .match(/[$a-zA-Z_]\\w*/g)\n    || [];\n}\n\n/**\n * Return `str` with `props` mapped with `fn`.\n *\n * @param {String} str\n * @param {Array} props\n * @param {Function} fn\n * @return {String}\n * @api private\n */\n\nfunction map(str, props, fn) {\n  var re = /\\.\\w+|\\w+ *\\(|\"[^\"]*\"|'[^']*'|\\/([^/]+)\\/|[a-zA-Z_]\\w*/g;\n  return str.replace(re, function(_){\n    if ('(' == _[_.length - 1]) return fn(_);\n    if (!~props.indexOf(_)) return _;\n    return fn(_);\n  });\n}\n\n/**\n * Return unique array.\n *\n * @param {Array} arr\n * @return {Array}\n * @api private\n */\n\nfunction unique(arr) {\n  var ret = [];\n\n  for (var i = 0; i < arr.length; i++) {\n    if (~ret.indexOf(arr[i])) continue;\n    ret.push(arr[i]);\n  }\n\n  return ret;\n}\n\n/**\n * Map with prefix `str`.\n */\n\nfunction prefixed(str) {\n  return function(_){\n    return str + _;\n  };\n}\n",
    "deps": {}
  },
  "components/ianstormtaylor-to-space-case@0.1.2/index.js": {
    "id": "components/ianstormtaylor-to-space-case@0.1.2/index.js",
    "type": "js",
    "mtime": 1380684577000,
    "src": "\nvar clean = require('to-no-case');\n\n\n/**\n * Expose `toSpaceCase`.\n */\n\nmodule.exports = toSpaceCase;\n\n\n/**\n * Convert a `string` to space case.\n *\n * @param {String} string\n * @return {String}\n */\n\n\nfunction toSpaceCase (string) {\n  return clean(string).replace(/[\\W_]+(.|$)/g, function (matches, match) {\n    return match ? ' ' + match : '';\n  });\n}",
    "deps": {
      "to-no-case": "components/ianstormtaylor-to-no-case@0.1.0/index.js"
    }
  },
  "components/ianstormtaylor-to-no-case@0.1.0/index.js": {
    "id": "components/ianstormtaylor-to-no-case@0.1.0/index.js",
    "type": "js",
    "mtime": 1379619598000,
    "src": "\n/**\n * Expose `toNoCase`.\n */\n\nmodule.exports = toNoCase;\n\n\n/**\n * Test whether a string is camel-case.\n */\n\nvar hasSpace = /\\s/;\nvar hasCamel = /[a-z][A-Z]/;\nvar hasSeparator = /[\\W_]/;\n\n\n/**\n * Remove any starting case from a `string`, like camel or snake, but keep\n * spaces and punctuation that may be important otherwise.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction toNoCase (string) {\n  if (hasSpace.test(string)) return string.toLowerCase();\n\n  if (hasSeparator.test(string)) string = unseparate(string);\n  if (hasCamel.test(string)) string = uncamelize(string);\n  return string.toLowerCase();\n}\n\n\n/**\n * Separator splitter.\n */\n\nvar separatorSplitter = /[\\W_]+(.|$)/g;\n\n\n/**\n * Un-separate a `string`.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction unseparate (string) {\n  return string.replace(separatorSplitter, function (m, next) {\n    return next ? ' ' + next : '';\n  });\n}\n\n\n/**\n * Camelcase splitter.\n */\n\nvar camelSplitter = /(.)([A-Z]+)/g;\n\n\n/**\n * Un-camelcase a `string`.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction uncamelize (string) {\n  return string.replace(camelSplitter, function (m, previous, uppers) {\n    return previous + ' ' + uppers.toLowerCase().split('').join(' ');\n  });\n}",
    "deps": {}
  },
  "components/component-map@0.0.1/index.js": {
    "id": "components/component-map@0.0.1/index.js",
    "type": "js",
    "mtime": 1348161456000,
    "src": "\n/**\n * Module dependencies.\n */\n\nvar toFunction = require('to-function');\n\n/**\n * Map the given `arr` with callback `fn(val, i)`.\n *\n * @param {Array} arr\n * @param {Function} fn\n * @return {Array}\n * @api public\n */\n\nmodule.exports = function(arr, fn){\n  var ret = [];\n  fn = toFunction(fn);\n  for (var i = 0; i < arr.length; ++i) {\n    ret.push(fn(arr[i], i));\n  }\n  return ret;\n};",
    "deps": {
      "to-function": "components/component-to-function@2.0.6/index.js"
    }
  },
  "components/component-to-function@2.0.6/index.js": {
    "id": "components/component-to-function@2.0.6/index.js",
    "type": "js",
    "mtime": 1422593017000,
    "src": "\n/**\n * Module Dependencies\n */\n\nvar expr;\ntry {\n  expr = require('props');\n} catch(e) {\n  expr = require('component-props');\n}\n\n/**\n * Expose `toFunction()`.\n */\n\nmodule.exports = toFunction;\n\n/**\n * Convert `obj` to a `Function`.\n *\n * @param {Mixed} obj\n * @return {Function}\n * @api private\n */\n\nfunction toFunction(obj) {\n  switch ({}.toString.call(obj)) {\n    case '[object Object]':\n      return objectToFunction(obj);\n    case '[object Function]':\n      return obj;\n    case '[object String]':\n      return stringToFunction(obj);\n    case '[object RegExp]':\n      return regexpToFunction(obj);\n    default:\n      return defaultToFunction(obj);\n  }\n}\n\n/**\n * Default to strict equality.\n *\n * @param {Mixed} val\n * @return {Function}\n * @api private\n */\n\nfunction defaultToFunction(val) {\n  return function(obj){\n    return val === obj;\n  };\n}\n\n/**\n * Convert `re` to a function.\n *\n * @param {RegExp} re\n * @return {Function}\n * @api private\n */\n\nfunction regexpToFunction(re) {\n  return function(obj){\n    return re.test(obj);\n  };\n}\n\n/**\n * Convert property `str` to a function.\n *\n * @param {String} str\n * @return {Function}\n * @api private\n */\n\nfunction stringToFunction(str) {\n  // immediate such as \"> 20\"\n  if (/^ *\\W+/.test(str)) return new Function('_', 'return _ ' + str);\n\n  // properties such as \"name.first\" or \"age > 18\" or \"age > 18 && age < 36\"\n  return new Function('_', 'return ' + get(str));\n}\n\n/**\n * Convert `object` to a function.\n *\n * @param {Object} object\n * @return {Function}\n * @api private\n */\n\nfunction objectToFunction(obj) {\n  var match = {};\n  for (var key in obj) {\n    match[key] = typeof obj[key] === 'string'\n      ? defaultToFunction(obj[key])\n      : toFunction(obj[key]);\n  }\n  return function(val){\n    if (typeof val !== 'object') return false;\n    for (var key in match) {\n      if (!(key in val)) return false;\n      if (!match[key](val[key])) return false;\n    }\n    return true;\n  };\n}\n\n/**\n * Built the getter function. Supports getter style functions\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nfunction get(str) {\n  var props = expr(str);\n  if (!props.length) return '_.' + str;\n\n  var val, i, prop;\n  for (i = 0; i < props.length; i++) {\n    prop = props[i];\n    val = '_.' + prop;\n    val = \"('function' == typeof \" + val + \" ? \" + val + \"() : \" + val + \")\";\n\n    // mimic negative lookbehind to avoid problems with nested properties\n    str = stripNested(prop, str, val);\n  }\n\n  return str;\n}\n\n/**\n * Mimic negative lookbehind to avoid problems with nested properties.\n *\n * See: http://blog.stevenlevithan.com/archives/mimic-lookbehind-javascript\n *\n * @param {String} prop\n * @param {String} str\n * @param {String} val\n * @return {String}\n * @api private\n */\n\nfunction stripNested (prop, str, val) {\n  return str.replace(new RegExp('(\\\\.)?' + prop, 'g'), function($0, $1) {\n    return $1 ? $0 : val;\n  });\n}\n",
    "deps": {
      "props": "components/component-props@1.1.2/index.js",
      "component-props": "components/component-props@1.1.2/index.js"
    }
  }
}